"use strict";export default class BCScan{constructor(){}static startBCScanner(e){Quagga.init({inputStream:{name:"Live",type:"LiveStream",numOfWorkers:navigator.hardwareConcurrency,target:document.querySelector("#scannerContainer"),constraints:{width:320,height:200,facingMode:"environment"},area:{top:"0%",right:"0%",left:"0%",bottom:"0%"}},decoder:{readers:["code_128_reader"]},multiple:!1,locator:{halfSample:!0,patchSize:"large"}},function(e){e?console.log(e):(console.log("Initialization finished. Ready to start"),Quagga.start())}),Quagga.onProcessed(e=>{let t=Quagga.canvas.ctx.overlay,a=Quagga.canvas.dom.overlay;e&&(e.boxes&&(t.clearRect(0,0,parseInt(a.getAttribute("width")),parseInt(a.getAttribute("height"))),e.boxes.filter(function(t){return t!==e.box}).forEach(function(e){Quagga.ImageDebug.drawPath(e,{x:0,y:1},t,{color:"green",lineWidth:2})})),e.box&&Quagga.ImageDebug.drawPath(e.box,{x:0,y:1},t,{color:"#00F",lineWidth:2}),e.codeResult&&e.codeResult.code&&Quagga.ImageDebug.drawPath(e.line,{x:"x",y:"y"},t,{color:"red",lineWidth:3}))}),Quagga.onDetected(t=>{let a=t.codeResult.code;Quagga.stop(),e(a)})}}