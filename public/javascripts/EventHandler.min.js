"use strict";export default class EventHandler{constructor(){this.handleTitleCheckBoxes(),this.handleassetSubmit(),this.handleassetReScan(),this.handleassetFind(),this.handleassetList(),this.handleDone()}handleTitleCheckBoxes(){this.title1=0,this.title9=0,this.thirtyOneA=0;let checkBoxes=document.getElementsByName("titleCheckBox");for(let i=0;i<checkBoxes.length;i++){let boxValue=null;checkBoxes[i].addEventListener("click",()=>{boxValue=checkBoxes[i].checked?1:0,"title1"===checkBoxes[i].id?this.title1=boxValue:"title9"===checkBoxes[i].id?this.title9=boxValue:this.thirtyOneA=boxValue})}}handleassetSubmit(){document.getElementById("assetSubmit").addEventListener("click",()=>{document.getElementById("assetEntryForm").addEventListener("submit",event=>{event.preventDefault(),EventHandler.setDivDisplay("splashDiv","splashScanDiv"),this.sendFormData()})})}handleassetReScan(){document.getElementById("reScanBtn").addEventListener("click",()=>{EventHandler.setDivDisplay("splashDiv","splashScanDiv")})}handleDone(){document.getElementById("doneBtn").addEventListener("click",()=>{document.getElementById("listedassets").innerHTML="",document.getElementById("assetEntryForm").reset(),document.getElementById("assetFindForm").reset(),EventHandler.setDivDisplay("splashDiv","splashScanDiv")})}handleassetFind(){document.getElementById("assetFindBtn").addEventListener("click",()=>{EventHandler.setDivDisplay("assetFindDiv"),this.handleassetFindSubmit()})}handleassetList(){let self=this;document.getElementById("assetListBtn").addEventListener("click",()=>{EventHandler.setDivDisplay("assetListDiv","doneDiv"),fetch(document.url,{method:"POST",headers:{"x-requested-with":"fetch.1",mode:"no-cors"}}).then(function(response){return response.json()}).then(function(data){self.listassets(data)}).catch(function(error){console.log(error)})})}listassets(data){if(data.length>0){let self=this;const MD_COLUMNS=4;let assetDeleteList=[];for(let i=0;i<data.length;i++){let newRow=document.createElement("div");newRow.setAttribute("class","grid-x grid-padding-x grid-padding-y");let newCell1=document.createElement("div");newCell1.setAttribute("class","cell small-1 large-1");let newCell2=document.createElement("div");newCell2.setAttribute("class","cell small-11 large-11"),newCell2.setAttribute("id",`listasset${i}`);let newassetCheck=document.createElement("input");newassetCheck.setAttribute("type","checkbox"),newassetCheck.setAttribute("id",`assetCheck${i}`),newassetCheck.setAttribute("name","assetCheck"),newCell1.appendChild(newassetCheck),document.getElementById("listedassets").appendChild(newRow),newRow.appendChild(newCell1),newassetCheck.addEventListener("click",()=>{let tempArray=[],assetChecks=document.forms.listedassets.elements.assetCheck;for(let i=0;i<assetChecks.length;i++)assetChecks[i].checked&&tempArray.push(data[i][2]);assetDeleteList.length=0,assetDeleteList=tempArray.slice(0),tempArray.length=0,assetDeleteList.length>0?(self.handleassetDelete(assetDeleteList),EventHandler.setDivDisplay("assetListDiv","doneDiv","assetDeleteDiv")):EventHandler.setDivDisplay("assetListDiv","doneDiv")}),newRow.appendChild(newCell2);for(let j=0;j<MD_COLUMNS;j++)document.getElementById(`listasset${i}`).innerText+=` ${data[i][j]}`}}else document.getElementById("listedassets").innerHTML="<br><br><h1>asset does not exist in inventory.</h1>"}handleassetDelete(assetDeleteList){document.getElementById("assetDeleteBtn").addEventListener("click",()=>{fetch(document.url,{method:"POST",body:JSON.stringify(assetDeleteList),headers:{"x-requested-with":"fetch.2",mode:"no-cors"}}).then(response=>(console.log(response.text()),response.json())).catch(err=>{}),document.getElementById("listedassets").innerHTML="",document.getElementById("assetListBtn").click()})}handleassetFindSubmit(){let self=this;document.getElementById("assetFindSubmit").addEventListener("click",()=>{document.getElementById("listedassets").innerHTML="",EventHandler.setDivDisplay("assetListDiv","doneDiv");let formData=new FormData;formData.append("tag",document.getElementById("findassetAssetTag").value),formData.append("maker",document.getElementById("findassetMaker").value),formData.append("model",document.getElementById("findassetModel").value),fetch(document.url,{method:"POST",body:formData,headers:{"x-requested-with":"fetch.3",mode:"no-cors"}}).then(response=>response.json()).then(data=>{self.listassets(data)}).catch(err=>{console.log(err)})})}sendFormData(){let formData=new FormData;formData.append("tag",document.getElementById("assetTag").value),formData.append("maker",document.getElementById("assetMaker").value),formData.append("model",document.getElementById("assetModel").value),formData.append("sn",document.getElementById("serialNumber").value),formData.append("type",document.getElementById("assetType").value),formData.append("description",document.getElementById("assetDescription").value),formData.append("warranty",document.getElementById("assetWarranty").value),formData.append("purchaseDate",document.getElementById("purchaseDate").value),formData.append("isTitle1",this.title1),formData.append("isTitle9",this.title9),formData.append("is31a",this.thirtyOneA),fetch(document.url,{method:"POST",body:formData,headers:{"x-requested-with":"fetch.0",mode:"no-cors"}}).then(response=>(console.log(response.text()),response.json())).catch(errpr=>{}),document.getElementById("assetEntryForm").reset()}static setDivDisplay(div1,div2,div3){const DIVS=["assetDeleteDiv","splashDiv","splashScanDiv","scannerDiv","assetEntryDiv","assetListDiv","scanResultsExistsDiv","scanResultsNotExistDiv","assetFindDiv","doneDiv"];for(let index in DIVS)document.getElementById(DIVS[index]).style.display=div1===DIVS[index]||div2===DIVS[index]||div3===DIVS[index]?"block":"none"}};